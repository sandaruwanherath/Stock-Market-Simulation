/*******************************************************************
 * Created by the JDE: Mon Apr 02 19:06:01 IST 2012
 * WARNING: If you are editing this file from outside the JDE, you
 * should make sure to load the changes back into the JDE by setting
 * the preference "Check for outside changes..." in the "Text Editor"
 * preference tab or reload the component manually.
 * Otherwise you will lose your changes next time the file is generated.
 *******************************************************************/

package stockMarket;

import aos.jack.util.thread.Semaphore;
import investor.MessageFinished;

/**
the plan the market agent uses to handle a messagebuy event sent by an invester agent
*/
public plan ProcessRequestPlan extends Plan {
    logical int $price;
    logical int $shares;
    #handles event MessageBuy ev;
    #sends event MessageFinished fev;
    #uses data Semaphore mutex;
    #uses data OrderBook sharesToSell;
    
    static boolean relevant(MessageBuy ev)
    {
        return true;
    }
    
    context()
    {
        true;
    }
    
    #reasoning method
    body()
    {
        System.out.println("waiting for mutex");
        @waitFor(mutex.planWait());
        
        try{
            
            sharesToSell.getDetails(ev.company,$price,$shares);
            sharesToSell.remove(ev.company,$price.getValue(),$shares.getValue());
            @sleep(1);
            @send(ev.from,fev.finished("sold! ",$price.getValue()*ev.amountOfShares)); 
            
            System.out.println("sold!");
    }
    finally{mutex.signal();}
    }
    
    #reasoning method
    fail()
    {
        @sleep(5);
        @send(ev.from,fev.finished("sorry! can't sell ",0));
        System.out.println("sorry!");
    }
    

}

